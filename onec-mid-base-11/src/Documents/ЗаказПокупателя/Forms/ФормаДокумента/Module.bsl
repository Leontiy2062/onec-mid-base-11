
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
    // СтандартныеПодсистемы.ПодключаемыеКоманды
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
    // Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
    ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТовары

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыУслуги

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиСкидкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Услуги.ТекущиеДанные;
	
	РассчитатьСуммуСтроки(ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиПриИзменении(Элемент)
	РассчитатьСуммуДокумента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура РассчитатьСуммуСтроки(ТекущиеДанные)
	
	// ++ Задача Задача ДЗ_ЕДТ_командная рабрта 15.07.25 Доработан расчет СуммыСтроки с учетом реквизита СогласованнаяСкидка
	// КоэффициентСкидки = 1 - ТекущиеДанные.Скидка / 100;
	// ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
	
	СуммарнаяСкидка = ТекущиеДанные.Скидка + Объект.СогласованнаяСкидка;
	
	КоэффициентСкидки = 1 - СуммарнаяСкидка / 100;
	
	Если СуммарнаяСкидка > 100 Тогда
		
		ТекущиеДанные.Сумма = 0;
		
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = СтрШаблон("Суммарная скидка по позиции %1 превышает 100 процентов", ТекущиеДанные.Номенклатура);
		Сообщение.Поле = "ТекущиеДанные.Скидка";
		
		Сообщение.Сообщить();
		
	Иначе
		
		ТекущиеДанные.Сумма = ТекущиеДанные.Цена * ТекущиеДанные.Количество * КоэффициентСкидки;
		
	КонецЕсли;
	// --
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСуммуДокумента()
	
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма");
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТаблицу()
	// ++ Гревцов Задача ДЗ_ЕДТ_командная рабрта 15.07.25 Пересчитываем все строки табличных частей после применения скидки
	Для каждого СтрокаТовары Из Объект.Товары Цикл
		
		РассчитатьСуммуСтроки(СтрокаТовары);
		
	КонецЦикла;
		
	Для каждого СтрокаУслуги Из Объект.Услуги Цикл
		
		РассчитатьСуммуСтроки(СтрокаУслуги);
		
	КонецЦикла;
	
	РассчитатьСуммуДокумента();
	// --
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗадатьВопросОПересчетеТаблицы();
	// ++ Гревцов Задача ДЗ_ЕДТ_командная рабрта 15.07.25 Вопрос Асинх о необходимости пересчета
	Кнопки = РежимДиалогаВопрос.ДаНет;
	Ответ = Ждать ВопросАсинх ("Изменен процент скидки. Пересчитать таблицу Товары и Услуги?", Кнопки);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ПересчитатьТаблицу();
		
	КонецЕсли;
	// --
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СогласованнаяСкидкаПриИзменении(Элемент)
	// ++ Гревцов Задача ДЗ_ЕДТ_командная рабрта 15.07.25
	Если Объект.Товары.Количество() <> 0 ИЛИ Объект.Услуги.Количество() <> 0 Тогда
		ЗадатьВопросОПересчетеТаблицы();
	КонецЕсли;
	// --
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомандаПересчитатьТаблицу(Команда)
	// ++ Гревцов Задача ДЗ_ЕДТ_командная рабрта 15.07.25 Обработчик програмно добавленной в Общем модуле РаботаСФормами
	// команды ПересчитатьТаблицу
	ПересчитатьТаблицу();
	// --
КонецПроцедуры

#Область ПодключаемыеКоманды

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
    ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПродолжитьВыполнениеКомандыНаСервере(ПараметрыВыполнения, ДополнительныеПараметры) Экспорт
    ВыполнитьКомандуНаСервере(ПараметрыВыполнения);
КонецПроцедуры

&НаСервере
Процедура ВыполнитьКомандуНаСервере(ПараметрыВыполнения)
    ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
    ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти
